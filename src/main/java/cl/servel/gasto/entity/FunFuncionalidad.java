package cl.servel.gasto.entity;
// Generated 21-06-2019 16:11:25 by Hibernate Tools 5.2.12.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.SEQUENCE;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * FunFuncionalidad generated by hbm2java
 */
@Entity
@Table(name = "fun_funcionalidad")
public class FunFuncionalidad implements java.io.Serializable {

	private Integer funId;
	private String funNombre;
	private Date created;
	private Boolean funEliminado;
	private Date modified;
	private String funCodigo;
	private Set<RlcRelFuncionalidad> rlcRelFuncionalidadsForFunIdPadre = new HashSet<RlcRelFuncionalidad>(0);
	private Set<RlcRelFuncionalidad> rlcRelFuncionalidadsForFunIdHijo = new HashSet<RlcRelFuncionalidad>(0);
	private Set<RlcRolUsuarioFuncionalidad> rlcRolUsuarioFuncionalidads = new HashSet<RlcRolUsuarioFuncionalidad>(0);

	public FunFuncionalidad() {
	}

	public FunFuncionalidad(String funNombre, Date created, Boolean funEliminado, Date modified, String funCodigo,
			Set<RlcRelFuncionalidad> rlcRelFuncionalidadsForFunIdPadre,
			Set<RlcRelFuncionalidad> rlcRelFuncionalidadsForFunIdHijo,
			Set<RlcRolUsuarioFuncionalidad> rlcRolUsuarioFuncionalidads) {
		this.funNombre = funNombre;
		this.created = created;
		this.funEliminado = funEliminado;
		this.modified = modified;
		this.funCodigo = funCodigo;
		this.rlcRelFuncionalidadsForFunIdPadre = rlcRelFuncionalidadsForFunIdPadre;
		this.rlcRelFuncionalidadsForFunIdHijo = rlcRelFuncionalidadsForFunIdHijo;
		this.rlcRolUsuarioFuncionalidads = rlcRolUsuarioFuncionalidads;
	}

	@SequenceGenerator(name = "cl.servel.gasto.entity.FunFuncionalidadIdGenerator", sequenceName = "fun_funcionalidad_fun_id_seq", initialValue = 1, allocationSize = 1)
	@Id
	@GeneratedValue(strategy = SEQUENCE, generator = "cl.servel.gasto.entity.FunFuncionalidadIdGenerator")

	@Column(name = "fun_id", unique = true, nullable = false)
	public Integer getFunId() {
		return this.funId;
	}

	public void setFunId(Integer funId) {
		this.funId = funId;
	}

	@Column(name = "fun_nombre", length = 50)
	public String getFunNombre() {
		return this.funNombre;
	}

	public void setFunNombre(String funNombre) {
		this.funNombre = funNombre;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "created", length = 13)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Column(name = "fun_eliminado")
	public Boolean getFunEliminado() {
		return this.funEliminado;
	}

	public void setFunEliminado(Boolean funEliminado) {
		this.funEliminado = funEliminado;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "modified", length = 13)
	public Date getModified() {
		return this.modified;
	}

	public void setModified(Date modified) {
		this.modified = modified;
	}

	@Column(name = "fun_codigo", length = 200)
	public String getFunCodigo() {
		return this.funCodigo;
	}

	public void setFunCodigo(String funCodigo) {
		this.funCodigo = funCodigo;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "funFuncionalidadByFunIdPadre")
	public Set<RlcRelFuncionalidad> getRlcRelFuncionalidadsForFunIdPadre() {
		return this.rlcRelFuncionalidadsForFunIdPadre;
	}

	public void setRlcRelFuncionalidadsForFunIdPadre(Set<RlcRelFuncionalidad> rlcRelFuncionalidadsForFunIdPadre) {
		this.rlcRelFuncionalidadsForFunIdPadre = rlcRelFuncionalidadsForFunIdPadre;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "funFuncionalidadByFunIdHijo")
	public Set<RlcRelFuncionalidad> getRlcRelFuncionalidadsForFunIdHijo() {
		return this.rlcRelFuncionalidadsForFunIdHijo;
	}

	public void setRlcRelFuncionalidadsForFunIdHijo(Set<RlcRelFuncionalidad> rlcRelFuncionalidadsForFunIdHijo) {
		this.rlcRelFuncionalidadsForFunIdHijo = rlcRelFuncionalidadsForFunIdHijo;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "funFuncionalidad")
	public Set<RlcRolUsuarioFuncionalidad> getRlcRolUsuarioFuncionalidads() {
		return this.rlcRolUsuarioFuncionalidads;
	}

	public void setRlcRolUsuarioFuncionalidads(Set<RlcRolUsuarioFuncionalidad> rlcRolUsuarioFuncionalidads) {
		this.rlcRolUsuarioFuncionalidads = rlcRolUsuarioFuncionalidads;
	}

}
