package cl.servel.gasto.entity;
// Generated 25-03-2019 12:40:47 by Hibernate Tools 5.2.11.Final

import static javax.persistence.GenerationType.SEQUENCE;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * InfInstanciaFlujo generated by hbm2java
 */
@Entity
@Table(name = "inf_instancia_flujo")
public class InfInstanciaFlujo implements java.io.Serializable {

	private Integer infId;
	private CanCandidato canCandidato;
	private DtaDefinicionTarea dtaDefinicionTarea;
	private EveEventoEleccionario eveEventoEleccionario;
	private InbInstanciaBandeja inbInstanciaBandeja;
	private ParPartido parPartido;
	private UsuUsuarios usuUsuarios;
	private Date infFechaInicio;
	private Date infFechaTermino;
	private String infEstadoFlujo;
	private Boolean infConObservacion;
	private Boolean infConRespuesta;
	private Date infFechaAsignacion;
	private Integer infTotalLineas;
	private Integer usuUsuarioSubrogado;
	private Set<IntInstanciaTarea> intInstanciaTareas = new HashSet<IntInstanciaTarea>(0);

	public InfInstanciaFlujo() {
	}

	public InfInstanciaFlujo(EveEventoEleccionario eveEventoEleccionario, InbInstanciaBandeja inbInstanciaBandeja, UsuUsuarios usuUsuarios) {
		this.eveEventoEleccionario = eveEventoEleccionario;
		this.inbInstanciaBandeja = inbInstanciaBandeja;
		this.usuUsuarios = usuUsuarios;
	}

	public InfInstanciaFlujo(CanCandidato canCandidato, DtaDefinicionTarea dtaDefinicionTarea, EveEventoEleccionario eveEventoEleccionario, InbInstanciaBandeja inbInstanciaBandeja, ParPartido parPartido, UsuUsuarios usuUsuarios, Date infFechaInicio, Date infFechaTermino, String infEstadoFlujo, Boolean infConObservacion, Boolean infConRespuesta, Date infFechaAsignacion, Integer infTotalLineas,
			Integer usuUsuarioSubrogado, Set<IntInstanciaTarea> intInstanciaTareas) {
		this.canCandidato = canCandidato;
		this.dtaDefinicionTarea = dtaDefinicionTarea;
		this.eveEventoEleccionario = eveEventoEleccionario;
		this.inbInstanciaBandeja = inbInstanciaBandeja;
		this.parPartido = parPartido;
		this.usuUsuarios = usuUsuarios;
		this.infFechaInicio = infFechaInicio;
		this.infFechaTermino = infFechaTermino;
		this.infEstadoFlujo = infEstadoFlujo;
		this.infConObservacion = infConObservacion;
		this.infConRespuesta = infConRespuesta;
		this.infFechaAsignacion = infFechaAsignacion;
		this.infTotalLineas = infTotalLineas;
		this.usuUsuarioSubrogado = usuUsuarioSubrogado;
		this.intInstanciaTareas = intInstanciaTareas;
	}

	@SequenceGenerator(name = "InfInstanciaFlujoIdGenerator", sequenceName = "inf_instancia_flujo_inf_id_seq", initialValue = 1, allocationSize = 1)
	@Id
	@GeneratedValue(strategy = SEQUENCE, generator = "InfInstanciaFlujoIdGenerator")

	@Column(name = "inf_id", unique = true, nullable = false)
	public Integer getInfId() {
		return this.infId;
	}

	public void setInfId(Integer infId) {
		this.infId = infId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "can_id")
	public CanCandidato getCanCandidato() {
		return this.canCandidato;
	}

	public void setCanCandidato(CanCandidato canCandidato) {
		this.canCandidato = canCandidato;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "dta_id")
	public DtaDefinicionTarea getDtaDefinicionTarea() {
		return this.dtaDefinicionTarea;
	}

	public void setDtaDefinicionTarea(DtaDefinicionTarea dtaDefinicionTarea) {
		this.dtaDefinicionTarea = dtaDefinicionTarea;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "eve_id", nullable = false)
	public EveEventoEleccionario getEveEventoEleccionario() {
		return this.eveEventoEleccionario;
	}

	public void setEveEventoEleccionario(EveEventoEleccionario eveEventoEleccionario) {
		this.eveEventoEleccionario = eveEventoEleccionario;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "inb_id", nullable = false)
	public InbInstanciaBandeja getInbInstanciaBandeja() {
		return this.inbInstanciaBandeja;
	}

	public void setInbInstanciaBandeja(InbInstanciaBandeja inbInstanciaBandeja) {
		this.inbInstanciaBandeja = inbInstanciaBandeja;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "par_id")
	public ParPartido getParPartido() {
		return this.parPartido;
	}

	public void setParPartido(ParPartido parPartido) {
		this.parPartido = parPartido;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "usu_id_actual", nullable = false)
	public UsuUsuarios getUsuUsuarios() {
		return this.usuUsuarios;
	}

	public void setUsuUsuarios(UsuUsuarios usuUsuarios) {
		this.usuUsuarios = usuUsuarios;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "inf_fecha_inicio", length = 29)
	public Date getInfFechaInicio() {
		return this.infFechaInicio;
	}

	public void setInfFechaInicio(Date infFechaInicio) {
		this.infFechaInicio = infFechaInicio;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "inf_fecha_termino", length = 29)
	public Date getInfFechaTermino() {
		return this.infFechaTermino;
	}

	public void setInfFechaTermino(Date infFechaTermino) {
		this.infFechaTermino = infFechaTermino;
	}

	@Column(name = "inf_estado_flujo", length = 50)
	public String getInfEstadoFlujo() {
		return this.infEstadoFlujo;
	}

	public void setInfEstadoFlujo(String infEstadoFlujo) {
		this.infEstadoFlujo = infEstadoFlujo;
	}

	@Column(name = "inf_con_observacion")
	public Boolean getInfConObservacion() {
		return this.infConObservacion;
	}

	public void setInfConObservacion(Boolean infConObservacion) {
		this.infConObservacion = infConObservacion;
	}

	@Column(name = "inf_con_respuesta")
	public Boolean getInfConRespuesta() {
		return this.infConRespuesta;
	}

	public void setInfConRespuesta(Boolean infConRespuesta) {
		this.infConRespuesta = infConRespuesta;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "inf_fecha_asignacion", length = 29)
	public Date getInfFechaAsignacion() {
		return this.infFechaAsignacion;
	}

	public void setInfFechaAsignacion(Date infFechaAsignacion) {
		this.infFechaAsignacion = infFechaAsignacion;
	}

	@Column(name = "inf_total_lineas")
	public Integer getInfTotalLineas() {
		return this.infTotalLineas;
	}

	public void setInfTotalLineas(Integer infTotalLineas) {
		this.infTotalLineas = infTotalLineas;
	}

	@Column(name = "usu_usuario_subrogado")
	public Integer getUsuUsuarioSubrogado() {
		return this.usuUsuarioSubrogado;
	}

	public void setUsuUsuarioSubrogado(Integer usuUsuarioSubrogado) {
		this.usuUsuarioSubrogado = usuUsuarioSubrogado;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "infInstanciaFlujo")
	public Set<IntInstanciaTarea> getIntInstanciaTareas() {
		return this.intInstanciaTareas;
	}

	public void setIntInstanciaTareas(Set<IntInstanciaTarea> intInstanciaTareas) {
		this.intInstanciaTareas = intInstanciaTareas;
	}
}
