package cl.servel.gasto.entity;
// Generated 12-06-2019 10:39:12 by Hibernate Tools 5.2.11.Final

import static javax.persistence.GenerationType.SEQUENCE;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

/**
 * RlcRelFuncionalidad generated by hbm2java
 */
@Entity
@Table(name = "rlc_rel_funcionalidad")
public class RlcRelFuncionalidad implements java.io.Serializable {

	private Integer rlcId;
	private FunFuncionalidad funFuncionalidadByFunIdPadre;
	private FunFuncionalidad funFuncionalidadByFunIdHijo;
	private Integer rlcOrdenPrecedencia;

	public RlcRelFuncionalidad() {
	}

	public RlcRelFuncionalidad(FunFuncionalidad funFuncionalidadByFunIdPadre, FunFuncionalidad funFuncionalidadByFunIdHijo) {
		this.funFuncionalidadByFunIdPadre = funFuncionalidadByFunIdPadre;
		this.funFuncionalidadByFunIdHijo = funFuncionalidadByFunIdHijo;
	}

	public RlcRelFuncionalidad(FunFuncionalidad funFuncionalidadByFunIdPadre, FunFuncionalidad funFuncionalidadByFunIdHijo, Integer rlcOrdenPrecedencia) {
		this.funFuncionalidadByFunIdPadre = funFuncionalidadByFunIdPadre;
		this.funFuncionalidadByFunIdHijo = funFuncionalidadByFunIdHijo;
		this.rlcOrdenPrecedencia = rlcOrdenPrecedencia;
	}

	@SequenceGenerator(name = "RlcRelFuncionalidadIdGenerator", sequenceName = "rlc_rel_funcionalidad_rlc_id_seq", initialValue = 1, allocationSize = 1)
	@Id
	@GeneratedValue(strategy = SEQUENCE, generator = "RlcRelFuncionalidadIdGenerator")

	@Column(name = "rlc_id", unique = true, nullable = false)
	public Integer getRlcId() {
		return this.rlcId;
	}

	public void setRlcId(Integer rlcId) {
		this.rlcId = rlcId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "fun_id_padre", nullable = false)
	public FunFuncionalidad getFunFuncionalidadByFunIdPadre() {
		return this.funFuncionalidadByFunIdPadre;
	}

	public void setFunFuncionalidadByFunIdPadre(FunFuncionalidad funFuncionalidadByFunIdPadre) {
		this.funFuncionalidadByFunIdPadre = funFuncionalidadByFunIdPadre;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "fun_id_hijo", nullable = false)
	public FunFuncionalidad getFunFuncionalidadByFunIdHijo() {
		return this.funFuncionalidadByFunIdHijo;
	}

	public void setFunFuncionalidadByFunIdHijo(FunFuncionalidad funFuncionalidadByFunIdHijo) {
		this.funFuncionalidadByFunIdHijo = funFuncionalidadByFunIdHijo;
	}

	@Column(name = "rlc_orden_precedencia")
	public Integer getRlcOrdenPrecedencia() {
		return this.rlcOrdenPrecedencia;
	}

	public void setRlcOrdenPrecedencia(Integer rlcOrdenPrecedencia) {
		this.rlcOrdenPrecedencia = rlcOrdenPrecedencia;
	}

}
